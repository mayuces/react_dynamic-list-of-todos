{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoSelector","selectedTodoId","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","statusHandler","queryHandler","onChange","event","target","value","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","deselectTodo","useState","activeUser","setActiveUser","useEffect","userId","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","setQuery","status","setStatus","LoadTodos","a","loadedTodos","filteredTodos","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3c4d3b6.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  todoSelector: (todo : Todo) => void,\n  selectedTodoId?: number,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  todoSelector,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            {\n              'has-background-info-light': selectedTodoId === todo.id,\n            },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              {\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => todoSelector(todo)}\n            >\n              <span className=\"icon\">\n                {selectedTodoId === todo.id\n                  ? (<i className=\"far fa-eye-slash\" />)\n                  : (<i className=\"far fa-eye\" />)}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ninterface Props {\n  query: string,\n  statusHandler: (value: string) => void,\n  queryHandler: (value: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  statusHandler,\n  queryHandler,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => statusHandler(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => queryHandler(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query.length > 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => queryHandler('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\r\nimport { User } from './types/User';\r\n\r\n// eslint-disable-next-line max-len\r\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\r\n\r\nfunction wait(delay: number): Promise<void> {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nfunction get<T>(url: string): Promise<T> {\r\n  // eslint-disable-next-line prefer-template\r\n  const fullURL = BASE_URL + url + '.json';\r\n\r\n  return wait(300)\r\n    .then(() => fetch(fullURL))\r\n    .then(res => res.json());\r\n}\r\n\r\nexport const getTodos = () => get<Todo[]>('/todos');\r\n\r\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\r\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nexport const Loader: React.FC = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo,\n  deselectTodo: () => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, deselectTodo }) => {\n  const [activeUser, setActiveUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setActiveUser);\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!activeUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => deselectTodo()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${activeUser.email}`}>\n                {activeUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n\n  const LoadTodos = async () => {\n    const loadedTodos = await getTodos();\n\n    setTodos(loadedTodos);\n  };\n\n  const filteredTodos = todos.filter(todo => {\n    if ((status === 'active' && todo.completed)\n    || (status === 'completed' && !todo.completed)) {\n      return false;\n    }\n\n    return todo.title.toLowerCase().includes(query.toLowerCase());\n  });\n\n  useEffect(() => {\n    LoadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                statusHandler={setStatus}\n                queryHandler={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    todoSelector={setSelectedTodo}\n                    selectedTodoId={selectedTodo?.id}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          deselectTodo={() => setSelectedTodo(null)}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}